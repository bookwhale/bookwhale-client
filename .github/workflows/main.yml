# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the develop branch
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
          
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
        
      - name: Change Mode Executable gradlew
        run: chmod +x ./gradlew
        
      - name: Make GoogleService-json
        env:
          GOOGLE_SERVICE_JSON: ${{ secrets.GOOGLE_SERVICE_JSON }}
        run: |
          echo "$GOOGLE_SERVICE_JSON" > ./app/google-services.json

      - name: Access API_KEY
        env:
          KAKAO_APP_KEY: ${{ secrets.KAKAO_APP_KEY }}
          KAKAO_NATIVE_KEY: ${{ secrets.KAKAO_NATIVE_KEY }}
          NAVER_CLIENT_SECRET: ${{ secrets.NAVER_CLIENT_SECRET }}
        run: |
          echo KAKAO_APP_KEY=\"$KAKAO_APP_KEY\" > ./local.properties
          echo KAKAO_NATIVE_KEY=\"$KAKAO_NATIVE_KEY\" >> ./local.properties
          echo NAVER_CLIENT_SECRET=\"$NAVER_CLIENT_SECRET\" >> ./local.properties
          cat ./local.properties
        
      - name: Build APK
        run: bash ./gradlew assembleDebug --stacktrace
        
      - run: './gradlew assembleDebug --stacktrace'
      - uses: MeilCli/slack-upload-file@v1
        with:
          slack_token: ${{ secrets.SLACK_READ_WRITE_TOKEN }}
          channels: ${{ secrets.SLACK_CHANNEL_DEPOLY }}
          file_path: 'app/build/outputs/apk/debug/app-debug.apk'
          file_name: 'app-debug.apk'
          file_type: 'apk'
          initial_comment: '${{ github.ref }} 테스트용 apk 배포'
          
      - name: 테스트용 apk artifact 업로드
        uses: actions/upload-artifact@v2
        with:
          name: app-debug.apk
          path: app/build/outputs/apk/debug/app-debug.apk

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
